% ============================================================ %
%% Step 0 - Adding data to analyze
% ============================================================ %
% Before moving forward, if you have any .ang files generated by TSL which 
% follow the same formatting as the original "Map1.ang", place them in the
% folder "1_Original_angs". 
% If you have .ang files that match a format readable by MTEX5.1.1, place
% those directly into the folder "2_Corrected_angs"
% ============================================================ %
%% Step 1 - Reformatting TSL Data
% ============================================================ %
% Now we need to convert the TSL angs into MTEX-friendly angs. I did this
% step in python cause it was easier, but feel free to copy what i did into
% Matlab instead. 
% NOTE: if you are not a common matlab user, there is a good chance this
% line will fail. if it does, upen up command prompt or Terminal and type:
%      "pip install numpy"
%if THAT fails, email austin at gerlt.1@osu.edu
system("python ang_hotfix.py");

% ============================================================ %
%% Step 2 - Set In-Plane Weighting Parameters
% ============================================================ %
% For different scans with different levels of noise or grain size, it is
% possible that the reconstruction can be improved by changing the IP
% weights used by the graph cut. for now, they are set to the defaults
IP = [4,6];


% ============================================================ %
%% Step 3 - Try some alternate Cleanups
% ============================================================ %
% READ THIS PART!!!!
% Because the initial EBSD scan is so noisy, AusRecon has troubles with the
% Reconstruction. it will EVENTUALLY complete after a few days, but it
% makes more sense to instead do some sort of cleanup before running.
% However, the correct cleanup is less science and more art, so I tried
% three different method here. Feel free to use whatever one works for you:

% list all angfiles
angfiles = dir("Data/2_Corrected_angs/*.ang");

for angfile = angfiles
    % grab explicit filename
    angfile_name = angfile.folder + "\" + angfile.name;
    %Load angfile into MTEX
    orig_ebsd = loadEBSD("Data/2_Corrected_angs/Map1.ang");
    % Create and save plots to show the noise and how the Austenite is 
    % primarily misindexed points
    
    im_savename = angfile_name(1:end-4);
    fig1 = figure();
    plot(orig_ebsd);
    fig1.Name = 'Phases';
    exportgraphics(fig1,im_savename+"Phases.png")
    
    fig2 = figure();
    plot(orig_ebsd('Martensite'),orig_ebsd('Martensite').orientations);
    fig2.Name = 'Martensite_orientations'; 
    exportgraphics(fig2,im_savename+"Martensite_orientations.png")

    fig3 = figure(3);
    CS_A = orig_ebsd('Austenite').CS;
    plotPDF(orig_ebsd('Austenite').orientations,...
            Miller(0,0,1,CS_A),'points','all','MarkerSize',1);
    fig3.Name = 'Austenite_PF'; 
    exportgraphics(fig3,im_savename+"Austenite_PF.png")
    
    
    % CLEANUP METHOD 1: Remove all grains less than 10 pixels in size
    min_pix_5_ebsd = orig_ebsd;
    [grains,min_pix_5_ebsd.grainId] = calcGrains(min_pix_5_ebsd,'angle',5*degree);
    min_pix_5_ebsd(grains(grains.grainSize<=25))= [];
    [grains,min_pix_5_ebsd.grainId] = calcGrains(min_pix_5_ebsd,'angle',5*degree);
    
        
    % Do the small grain cleanup here. 6 was not enough last time, try more
    Mart = tank_EBSD.Ebsd;
    [grains,Mart.grainId] = calcGrains(Mart,'angle',5*degree);
    Mart(grains(grains.grainSize<=25))= [];
    [grains,Mart.grainId] = calcGrains(Mart,'angle',5*degree);
    tank_EBSD.Ebsd = Mart;
    %This is the last point where we modify data. everything else is
    %parameter modification, so this is where we create an input list


%For different scans with different levels of noise or grain size, it is
% possible that the reconstruction can be improved by changing the IP
% weights used by the graph cut. for now, they are set to the defaults
IP = [4,6];
